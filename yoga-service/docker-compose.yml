version: "3.5"

services:
  postgres:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - postgres

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloak
    ports:
      - "8081:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    networks:
      - postgres
    volumes:
      - keycloak:/var/lib/keycloak

  redis:
    image: redis:7
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - postgres
    volumes:
      - redis:/var/lib/redis

  prometheus:
    image: quay.io/prometheus/prometheus:v2.51.1
    container_name: prometheus
    extra_hosts:
      - host.docker.internal:host-gateway
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
    ports:
      - 9090:9090
    networks:
      - postgres
    volumes:
      - ./src/observability/prometheus-config.yaml:/etc/prometheus/prometheus.yaml


  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - postgres
    volumes:
      - grafana:/var/lib/grafana

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: collector
    volumes:
      - ./src/observability/otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    command:
      - --config=/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    networks:
      - postgres
    depends_on:
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
    networks:
      - postgres

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - postgres





networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  keycloak:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  redis:
  grafana:
  prometheus:
  otel-collector:

